// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Molecule molecule
// swagger:model Molecule
type Molecule struct {

	// calculated properties
	CalculatedProperties []string `json:"calculated-properties"`

	// comments
	Comments string `json:"comments,omitempty"`

	// documented properties
	DocumentedProperties []string `json:"documented-properties"`

	// inchi
	Inchi string `json:"inchi,omitempty"`

	// institution
	Institution string `json:"institution,omitempty"`

	// name
	// Required: true
	Name *string `json:"name"`

	// smiles
	Smiles string `json:"smiles,omitempty"`

	// uploader
	Uploader string `json:"uploader,omitempty"`

	// value
	Value int64 `json:"value,omitempty"`
}

// Validate validates this molecule
func (m *Molecule) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Molecule) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Molecule) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Molecule) UnmarshalBinary(b []byte) error {
	var res Molecule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
